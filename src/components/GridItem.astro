---
import { getEntry, type CollectionEntry } from 'astro:content';
import { Icon } from 'astro-icon'

interface Props {
    item: CollectionEntry<'grid'>,
    id?: string,
}

const { item, id } = Astro.props;
const entry:CollectionEntry<'grid'> = await getEntry('grid', item.slug);
const { Content } = await entry.render();

const tailwind_compatible = ['bg-violet-400','bg-pink-400','bg-red-400','bg-orange-400','bg-yellow-400','bg-lime-400','bg-cyan-400']

// get random background color
const background = tailwind_compatible[Math.floor(Math.random() * tailwind_compatible.length)];

const spans = {
    1: 'col-span-1',
    2: 'col-span-2',
    3: 'col-span-3',
    4: 'col-span-4',
    5: 'col-span-5',
    6: 'col-span-6',
    7: 'col-span-7',
    8: 'col-span-8',
    9: 'col-span-9',
    10: 'col-span-10',
    11: 'col-span-11',
    12: 'col-span-12',
}
const colspan = spans[item.data.span];
---

<div id={id} class:list={['flex flex-col gap-4 p-4 brutalist-outline', colspan, background]}>
    <div class="flex-0 flex items-center gap-2 text-zinc-950">
        <Icon name={item.data.icon} class="flex-0 h-8"/>
        <h2 class="flex-1 text-lg font-header">{item.data.title}</h2>
    </div>
    <div class="flex-1 prose max-w-none prose-zinc">
        <Content />
    </div>
</div>

<style>
    @media (min-width: 768px) {
        #about {
            grid-column: 1 / -1;
        }
    }

    @media (min-width: 1024px) {
        #about {
            grid-column: 1 / span 2;
        } 
    }
</style>