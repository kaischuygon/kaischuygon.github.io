---
import { getEntry, type CollectionEntry } from 'astro:content';
import { Icon } from 'astro-icon'

interface Props {
    item: CollectionEntry<'grid'>,
    id?: string,
}

const { item, id } = Astro.props;
const entry:CollectionEntry<'grid'> = await getEntry('grid', item.slug);
const { Content } = await entry.render();

const t_variant = {
	violet:  'bg-violet-400',
	pink:    'bg-pink-400',
	red:     'bg-red-400',
	orange:  'bg-orange-400',
	yellow:  'bg-yellow-400',
	lime:    'bg-lime-400',
	cyan:    'bg-cyan-400',
}[item.data.variant]

const span = [
    'col-span-none',
    'col-span-1',
    'col-span-2',
    'col-span-3',
    'col-span-4',
    'col-span-5',
    'col-span-6',
    'col-span-7',
    'col-span-8',
    'col-span-9',
    'col-span-10',
    'col-span-11',
    'col-span-12',
][item.data.span]
---

<div id={id} class:list={['flex flex-col gap-4 p-4 brutalist-outline', span, t_variant]}>
    <div class="flex-0 flex items-center gap-2 text-zinc-950">
        <Icon name={item.data.icon} class="flex-0 h-8"/>
        <h2 class="flex-1 text-lg font-header">{item.data.title}</h2>
    </div>
    <div class="flex-1 prose max-w-none prose-zinc">
        <Content />
    </div>
</div>

<style>
    @media (min-width: 768px) {
        #about {
            grid-column: 1 / -1;
        }
    }

    @media (min-width: 1024px) {
        #about {
            grid-column: 1 / span 2;
        } 
    }
</style>