---
import Icon from 'astro-icon';
---

<theme-toggle class="bg-zinc-200 dark:bg-zinc-800" transition:persist>
	<button class="flex cursor-pointer shadow-outline dark:shadow-outline-dark" id="themeToggle">
		<span class="sr-only">Dark theme</span>
		<span class="icon light"><Icon name="bx:bxs-sun" /></span>
		<span class="icon dark"><Icon name="bx:bxs-moon" /></span>
	</button>
</theme-toggle>

<style>
	.icon {
		@apply z-10 relative flex p-2 w-8 aspect-square text-zinc-500;
	}

	.icon.light::before {
		@apply -z-10 block absolute inset-0 bg-emerald-400 dark:bg-emerald-600 content-[''];
	}

	:global(.dark) .icon.light::before {
		transform: translateX(100%);
	}

	.icon.dark::before {
		transform: translateX(-100%);
	}

	:global(.dark) .icon.dark,
	:global(html:not(.dark)) .icon.light,
	button[aria-pressed='false'] .icon.light {
		@apply text-zinc-950
	}
</style>

<script is:inline>
	const theme = (() => {
	  if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
		return localStorage.getItem('theme');
	  }
	  if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
		return 'dark';
	  }
		return 'light';
	})();
  
	if (theme === 'light') {
	  document.documentElement.classList.remove('dark');
	} else {
	  document.documentElement.classList.add('dark');
	}
  
	window.localStorage.setItem('theme', theme);
  
	const handleToggleClick = () => {
		
	  const element = document.documentElement;
	  element.classList.toggle("dark");
  
	  const isDark = element.classList.contains("dark");
	  localStorage.setItem("theme", isDark ? "dark" : "light");
	}
  
	document.getElementById("themeToggle").addEventListener("click", handleToggleClick);

	document.addEventListener('astro:after-swap', function () {
		if (theme === 'dark') {
			const element = document.documentElement;
		  	element.classList.toggle("dark", true);
		}
	});
  </script>
