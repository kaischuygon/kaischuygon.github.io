---
import { getCollection } from 'astro:content';
import type { CollectionEntry } from 'astro:content';

import Layout from '../../layouts/Layout.astro';

import { Icon } from 'astro-icon/components';
import Pill from '../../components/Pill.astro';

import { Image } from 'astro:assets'

interface Props {
	entry: CollectionEntry<'work'>;
}

// This is a dynamic route that generates a page for every Markdown file in src/content/
// Read more about dynamic routes and this `getStaticPaths` function in the Astro docs:
// https://docs.astro.build/en/core-concepts/routing/#dynamic-routes
export async function getStaticPaths() {
	const work = await getCollection('work');
	return work.map((entry:CollectionEntry<'work'>) => ({
		params: { slug: entry.slug },
		props: { entry },
	}));
}

const { entry } = Astro.props;
const { Content } = await entry.render();
---

<Layout title={entry.data.title} description={entry.data.description}>
	<div class="mx-auto">
		<a href="/work" class="flex items-center mb-4 font-header">
			<Icon name="bx:bx-arrow-back" class="inline-block text-xl mr-2" />	
			Back to work
		</a>
		<div class=" lg:flex-row gap-4 mb-4 bg-primary-100 dark:bg-primary-900 rounded brutalist-outline-accent">
			<header class="p-4">
				<h2 class="font-code text-4xl md:text-5xl lg:text-6xl font-extrabold text-primary-800 dark:text-primary-200">{entry.data.title}</h2>
				<p class="text-primary-600 dark:text-primary-400">{entry.data.description}</p>
				<div class="flex gap-4 mt-4">
					{entry.data.tags.map((t) => <Pill>{t}</Pill>)}
				</div>
			</header>
			<div class="p-2 prose prose-zinc dark:prose-invert mx-auto">
				{entry.data.img ?
					<div class="p-2">
						<Image 
							src={entry.data.img}
							alt={entry.data.title ? entry.data.title : ""}
							width=1000
							height=1000
							class="brutalist-outline mx-auto w-full"
							loading="lazy" decoding="async"
						/>
					</div> : null
				}
				<Content />
			</div>
		</div>
	</div>
</Layout>
